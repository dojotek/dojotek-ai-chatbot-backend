---
description:
globs:
alwaysApply: true
---
Product name is Dojotek AI Chatbot.

It is a software system to help enterprise/company/corporate to build, configure, run, monitor multiple Chatbot AI LLM RAG.

The AI Chatbots can be exposed to multiple channels:
- Slack
- Microsoft Team
- Lark
- Discord
- Telegram
- WhatsApp
- etc

The original idea of this project is to be used on the following business verticals or company division:
- Hospital / Clinic
- Corporate Health Insurance Company
- Ecommerce
- Legal and Compliance
- Sales Enablement
- Technical Support
- Customer Support

This repository is dedicated for backend. Stacks:
- Nest.js
- TypeScript
- Prisma for ORM
- PostgreSQL
- Redis for caching, use node-redis NPM package to utilize full features of Redis, don't use Nest.js's CACHE_MANAGER because its feature very limited
- BullMQ for message queue
- LangChain js
- LangGraph js
- Swagger / OpenAPI for REST API documentation and client SDK generation
- Docker Compose for deployment
- Helm Chart for deployment on Kubernetes
- Prometheus for metrics recording
- Grafana for monitoring dashboard
- Loki for log processing

Data modelling:
- roles, to define what roles exist in the system
- users, to define user to maintain the system, password should be hashed using bcrypt
- settings, to define key-value of system parameters that can be created and updated on runtime
- secrets, to define key-value but to store secrets, should be encrypted
- knowledges, to define logical container of knowledge that will be fed to chat agent
- knowledge_files, to represent a file (PDF, DOCX, plaintext, etc) that stored into a knowledge container
- customers, to represent the business customer in real life (may represent business-entity clients, or personal clients)
- customer_staffs, to represent employee or staff or member of a business-entity client
- chat_agents, to represent Chatbot AI build by user, contains the LangGraph state-machine and related configuration, also may contain specific HTTP Clients configuration to call external system
- chat_channels, to represent specific channel configuration to expose Chatbot AI Agent (webhook URL and secret for Slack, Lark, Microsoft Team, etc)
- chat_sessions, to represent specific chat session of a customer or customer_staff with Chatbot AI Agent on a specific channel and sandboxed 
- chat_messages, to represent chat messaged from customer or customer_staff (Human) and LLM (AI)
